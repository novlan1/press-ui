const { replaceAllPolyfill } = require('t-comm');
const fs = require('fs');

replaceAllPolyfill();

const MAIN_TEMPLATE = `/* Automatically generated by './script/component-config/generate-entry.js' */
{{install}}

const components = {
  {{components}}
};

const install = function (Vue) {
  Object.values(components).forEach((component) => {
    Vue.component(component.name, component);
  });

};

if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  install,
  ...components,
};
`;

function hyphenate(str) {
  const hyphenateRE = /\B([A-Z])/g;
  return str.replace(hyphenateRE, '-$1').toLowerCase();
}


function getComponentPath(component) {
  const SPECIAL_COMPONENT_MAP = {
    'message-board': 'message-board-list',
  };
  return SPECIAL_COMPONENT_MAP[component] || component;
}

function getCompList(componentConfig) {
  const importList = [];
  const componentNameList = [];

  Object.keys(componentConfig)
    .forEach((key) => {
      const value = componentConfig[key];
      const { list } = value;


      list.forEach((item) => {
        const hyphenatedName = hyphenate(item.name);
        const shortName = item.name.replace(/$Press/, '');
        const compPath = getComponentPath(hyphenatedName);
        importList.push(`import ${shortName} from './packages/press-${hyphenatedName}/press-${compPath}.vue';`);

        componentNameList.push(shortName);
      });
    });
  return {
    importList,
    componentNameList,
  };
}

function getSrcIndexJs(componentConfig) {
  const {
    importList,
    componentNameList,
  } = getCompList(componentConfig);

  const res = MAIN_TEMPLATE
    .replace('{{install}}', importList.join('\n'))
    .replaceAll('{{components}}', componentNameList.map(item => `${item},`).join('\n  '));

  return res;
}


function writeSrcIndexJs(componentConfig, filePath) {
  const js = getSrcIndexJs(componentConfig);
  fs.writeFileSync(filePath, js, {
    encoding: 'utf-8',
  });
}


module.exports = {
  hyphenate,
  getComponentPath,
  writeSrcIndexJs,
};
